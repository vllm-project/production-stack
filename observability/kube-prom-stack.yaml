## Create default rules for monitoring the cluster
#
# Disable `etcd` and `kubeScheduler` rules (managed by DOKS, so metrics are not accessible)
defaultRules:
  create: true
  rules:
    etcd: false
    kubeScheduler: false

## Component scraping kube scheduler
##
# Disabled because it's being managed by DOKS, so it's not accessible
kubeScheduler:
  enabled: false

## Component scraping etcd
##
# Disabled because it's being managed by DOKS, so it's not accessible
kubeEtcd:
  enabled: false

alertmanager:
  ## Deploy alertmanager
  ##
  enabled: true
  # config:
  #   global:
  #     resolve_timeout: 5m
  #     slack_api_url: "<YOUR_SLACK_APP_INCOMING_WEBHOOK_URL_HERE>"
  #   route:
  #     receiver: "slack-notifications"
  #     repeat_interval: 12h
  #     routes:
  #       - receiver: "slack-notifications"
  #         # matchers:
  #         #   - alertname="EmojivotoInstanceDown"
  #         # continue: false
  #   receivers:
  #     - name: "slack-notifications"
  #       slack_configs:
  #         - channel: "#<YOUR_SLACK_CHANNEL_NAME_HERE>"
  #           send_resolved: true
  #           title: "{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}"
  #           text: "{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}"

# additionalPrometheusRulesMap:
#   rule-name:
#     groups:
#     - name: emojivoto-instance-down
#       rules:
#         - alert: EmojivotoInstanceDown
#           expr: sum(kube_pod_owner{namespace="emojivoto"}) by (namespace) < 4
#           for: 1m
#           labels:
#             severity: 'critical'
#             alert_type: 'infrastructure'
#           annotations:
#             description: ' The Number of pods from the namespace {{ $labels.namespace }} is lower than the expected 4. '
#             summary: 'Pod in {{ $labels.namespace }} namespace down'

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  enabled: true
  adminPassword: prom-operator # Please change the default password in production !!!
#   affinity:
#     nodeAffinity:
#       preferredDuringSchedulingIgnoredDuringExecution:
#       - weight: 1
#         preference:
#           matchExpressions:
#           - key: preferred
#             operator: In
#             values:
#             - observability

  # # Starter Kit setup for DigitalOcean Block Storage
  # persistence:
  #   enabled: true
  #   storageClassName: do-block-storage
  #   accessModes: ["ReadWriteOnce"]
  #   size: 5Gi

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  # Monitor vLLM pods using ServiceMonitor
  additionalServiceMonitors:
    - name: "vllm-monitor"
      selector:
        matchLabels:
          app.kubernetes.io/managed-by: Helm
          environment: test
          release: test
      namespaceSelector:
        matchNames:
          - default
      endpoints:
        - port: "service-port"
