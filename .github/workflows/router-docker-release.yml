name: Release vLLM Router Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'src/vllm_router/**'
      - 'docker/**'
      - 'setup.py'

  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: lmcache
          password: ${{ secrets.LMCACHE_DOCKER_SECRET }}

      - name: Extract and sanitize version
        id: version
        run: |
          raw_version=$(python setup.py --version)
          sanitized_version=${raw_version//+/-}
          echo "version=$sanitized_version" >> "$GITHUB_ENV"
          echo "Sanitized version: $sanitized_version"

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          # Note: also push the image to Docker Hub as the helm chart uses it by default
          tags: |
            ghcr.io/${{ github.repository }}/router:latest
            ghcr.io/${{ github.repository }}/router:${{ env.version }}
            ghcr.io/${{ github.repository }}/router:${{ github.sha }}
            lmcache/lmstack-router:latest
            lmcache/lmstack-router:${{ env.version }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/router:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/router:buildcache,mode=max
